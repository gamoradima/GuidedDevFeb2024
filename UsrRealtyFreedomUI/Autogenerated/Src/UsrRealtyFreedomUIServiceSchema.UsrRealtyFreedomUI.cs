namespace Terrasoft.Configuration
{

	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;
	using Terrasoft.Common;
	using Terrasoft.Core;
	using Terrasoft.Core.Configuration;

	#region Class: UsrRealtyFreedomUIServiceSchema

	/// <exclude/>
	public class UsrRealtyFreedomUIServiceSchema : Terrasoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public UsrRealtyFreedomUIServiceSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public UsrRealtyFreedomUIServiceSchema(UsrRealtyFreedomUIServiceSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("373415a1-4ba0-4cb4-a982-b5ea54cd3175");
			Name = "UsrRealtyFreedomUIService";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("65f7fd06-a7c5-4c96-bd60-c8089955fd86");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,4,0,205,83,77,111,218,64,16,189,71,202,127,216,250,100,75,212,82,175,77,83,9,26,64,180,2,71,49,136,67,213,195,198,30,136,213,253,112,118,103,211,88,9,255,61,99,123,155,216,148,4,85,189,212,23,216,153,55,243,222,190,217,81,92,130,45,121,6,108,9,198,112,171,55,24,127,209,106,83,108,157,225,88,104,117,122,242,112,122,194,232,115,182,80,91,150,86,22,65,198,41,152,187,34,131,185,206,65,156,29,201,199,107,184,62,138,25,102,88,220,53,132,61,104,87,148,129,248,98,244,74,150,40,8,33,229,94,121,203,116,136,188,46,72,193,90,34,76,145,35,120,204,119,47,138,44,64,195,51,252,225,195,67,91,46,0,137,161,36,141,215,133,40,176,186,130,91,87,24,144,160,208,134,221,67,125,33,118,206,142,148,212,168,216,7,242,200,243,148,238,90,20,25,203,4,183,150,93,1,23,88,121,65,236,35,27,113,11,254,52,96,51,202,230,137,18,85,247,18,109,19,63,175,70,119,82,66,59,198,189,11,53,73,242,96,166,238,244,79,8,231,128,55,58,39,209,193,101,146,46,131,1,27,233,188,74,177,18,245,69,8,54,39,18,190,133,231,104,188,54,188,44,33,31,188,116,171,191,250,58,96,113,162,141,228,216,171,108,67,241,87,171,213,128,96,182,212,202,194,219,184,218,147,151,246,222,153,28,178,66,114,193,166,128,75,141,92,12,165,118,10,71,213,178,42,97,150,135,22,77,61,99,211,56,215,198,6,172,23,76,54,27,48,62,211,23,239,97,52,27,154,212,130,214,34,122,201,63,244,161,197,134,121,170,120,102,23,78,136,196,140,101,137,85,216,37,142,216,227,35,123,3,213,81,18,245,219,215,223,107,181,29,121,123,85,15,127,54,49,128,206,40,246,254,195,89,63,183,235,31,83,16,144,33,179,237,207,57,83,240,203,199,194,149,5,67,79,71,209,127,122,68,7,116,210,214,9,39,85,56,113,42,139,83,39,195,96,101,205,165,161,55,186,74,47,130,125,141,77,197,196,104,25,30,180,249,25,178,190,1,3,77,171,214,160,32,34,27,198,183,142,139,176,229,139,47,185,161,90,4,19,214,106,167,174,200,251,230,31,100,30,170,188,105,218,177,254,47,58,119,7,118,168,61,183,222,181,61,183,127,191,89,3,214,137,218,223,214,232,120,124,15,153,67,72,51,46,184,249,228,81,159,195,104,175,220,15,177,173,238,228,118,255,178,230,211,241,255,188,229,126,21,105,201,199,247,92,150,2,194,215,119,209,219,19,36,223,222,5,125,119,218,3,253,217,61,1,202,45,226,155,229,6,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("373415a1-4ba0-4cb4-a982-b5ea54cd3175"));
		}

		#endregion

	}

	#endregion

}

